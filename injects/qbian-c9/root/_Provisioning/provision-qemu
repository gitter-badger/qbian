#!/usr/bin/env bash
source /root/qbian.conf

clear && sleep 4 && \
echo " Running provision for device environment "
sleep 2 && \
USER="$user" # form qbian.config
PASS="$userpass" # form qbian.config
NEW_ROOT_PASS="$rootpass" # form qbian.config

if [ -z "$USER" ] || [ -z "$PASS" ] || [  -z "$NEW_ROOT_PASS" ]; then
   echo "Error - no username or password"
   exit 1
fi

## ln -f /usr/share/zoneinfo/Europe/London /etc/localtime && \
apt-get update && \
chmod 0755 /etc/ && chmod 0644 /etc/bash.bashrc && \
apt-get install libdevmapper1.02.1 minicom i2c-tools usbutils dh-autoreconf libi2c-dev resolvconf curl git-core vim iptables nano build-essential libstdc++6 gcc-4.8 g++-4.8 python python-smbus python-dev python3-dev python-pip -y && \
apt-get install -y sudo && \
## WIFI tools
apt-get install -y firmware-ralink firmware-realtek wireless-tools wpasupplicant && \
## @img -> software.img
## @ install raspi-config ??
update-alternatives --install /usr/bin/editor editor /usr/bin/vim 10 && \
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 20 && \
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50 && \
update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 20 && \
update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50 && \
#
echo -e "i2c-bcm2708\ni2c-dev" >> /etc/modules && \
echo -e "\n# i2c\nblacklist spi-bcm2708\nblacklist i2c-bcm2708" >> /etc/modprobe.d/fbdev-blacklist.conf && \
sed -i "s/blacklist/#blacklist/g" /etc/modprobe.d/fbdev-blacklist.conf && \
echo "Quick2Wire " && \
git clone https://github.com/quick2wire/quick2wire-gpio-admin.git quck2wire && \
cd quck2wire && make install && cd ~/ && \
echo "pi blaster" && \
git clone https://github.com/sarfata/pi-blaster.git && cd pi-blaster/ && \
./autogen.sh && ./configure && make && make install && cd ~/ && \
/etc/init.d/pi-blaster.boot.sh start && \
echo "Installing Docker" && \
curl -sSL http://downloads.hypriot.com/docker-hypriot_1.8.2-1_armhf.deb > /tmp/docker-hypriot_1.8.2-1_armhf.deb && \
dpkg -i /tmp/docker-hypriot_1.8.2-1_armhf.deb && \
## Should be already in skel
git clone https://github.com/creationix/nvm.git /etc/skel/.nvm && cd /etc/skel/.nvm  && git checkout v0.25.4 && cd ~/ && \
#Add user
useradd --shell /bin/bash --create-home --groups gpio,i2c,sudo,dialout,docker --comment "Device user" $USER && passwd $USER <<EFO
$PASS
$PASS
EFO
# Needs to be on device
ln -s /usr/sbin/i2cdetect /home/$USER/bin/i2cdetect && \
ln -s /usr/sbin/i2cdump /home/$USER/bin/i2cdump && \
ln -s /usr/sbin/i2cget /home/$USER/bin/i2cget && \
ln -s /usr/sbin/i2cset /home/$USER/bin/i2cset && \
git clone https://github.com/lurch/rpi-serial-console.git && \
ln -s ./rpi-serial-console/rpi-serial-console /usr/sbin/rpi-serial-console && \ # use $ sudo rpi-serial-console disable
#
chmod +x /etc/init.d/* && \
sed -i "s/{USER}/$USER/g" /etc/sudoers.d/user-perm && \
/bin/su - $USER -c "cd ~/ && nvm install iojs && nvm alias default iojs && npm i npm -g && npm i forever node-gyp coffee-script nodemon supervisor grunt bower -g && cd ~" && \
sed -i "s/{USER}/$USER/g" /etc/init.d/qbian-c9 && \
# install c9 ide
# /bin/su - $USER -c "cd ~/ && c9-install" && \
/bin/su - $USER -c "git clone https://github.com/trojanspike/qbian-server.git ~/Server" && \
/bin/su - $USER -c "cd ~/Server && npm install" && \
update-rc.d qbian-c9 defaults && \
passwd root <<EFO
$NEW_ROOT_PASS
$NEW_ROOT_PASS

EFO
echo "Complete Qemu provisions"
