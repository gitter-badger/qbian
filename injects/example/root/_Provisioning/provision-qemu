#!/usr/bin/env bash
clear && sleep 4 && \
echo " Running provision for device environment "
sleep 2 && \
# https://github.com/eugeneware/wiring-pi
# dpkg --get-selections
# dpkg --get-selections | grep -v deinstall
# npm ls -g --depth=0 --parseable
#@ http://www.raspberrypi-spy.co.uk/2014/11/enabling-the-i2c-interface-on-the-raspberry-pi/

echo -n "Please enter the new users name [NO SPACES] : "
read USER
echo -n "Please enter the new users password [NO SPACES] : "
read PASS

if [ -z "$USER" ] || [ -z "$PASS" ]; then
   echo "Error - no username or password"
   exit 1
fi

# Static IP
# cat /etc/network/interface.static > /etc/network/interface && \
# resolvconf -u
#
# do dist-upgrade -y ??

# @ set timezone @
## ln -f /usr/share/zoneinfo/Europe/London /etc/localtime && \
#?? service networking reload ??
apt-get update && \
# https://www.abelectronics.co.uk/i2c-raspbian-wheezy/info.aspx
# install debain packages
# https://www.garron.me/en/linux/visudo-command-sudoers-file-sudo-default-editor.html
# export VISUAL=vim; visudo
#
apt-get install minicom i2c-tools usbutils libi2c-dev resolvconf curl git-core vim iptables nano build-essential libstdc++6 gcc-4.8 g++-4.8 python python-smbus python-dev python3-dev python-pip -y && \
apt-get install -y sudo && \
## @ install raspi-config ??
## Update for node runner
## http://node-arm.herokuapp.com/
update-alternatives --install /usr/bin/editor editor /usr/bin/vim 10 && \
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.6 20 && \
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50 && \
update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.6 20 && \
update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50 && \
#
#? missing : snd-bcm2835
echo -e "i2c-bcm2708\ni2c-dev" >> /etc/modules && \
# NOTE : instead of /etc/modprobe.d/raspi-blacklist.conf
## @@ https://www.abelectronics.co.uk/kb/article/1/i2c--smbus-and-raspbian-wheezy
## @ I2C :: https://www.abelectronics.co.uk/kb/article/1/i2c--smbus-and-raspbian-wheezy
## @ http://think-bowl.com/raspberry-pi/how-to-configure-i2c-on-raspbian-wheezy/
## @ http://raspi.tv/how-to-set-up-i2c-in-raspbian-on-the-raspberry-pi
echo -e "\n# i2c\nblacklist spi-bcm2708\nblacklist i2c-bcm2708" >> /etc/modprobe.d/fbdev-blacklist.conf && \
sed -i "s/blacklist/#blacklist/g" /etc/modprobe.d/fbdev-blacklist.conf && \
#
## Should be already in skel
git clone https://github.com/creationix/nvm.git /etc/skel/.nvm && cd /etc/skel/.nvm  && git checkout v0.25.4 && cd ~/ && \
#Add user
useradd --shell /bin/bash --create-home --comment "Device user" $USER && passwd $USER <<EFO
$PASS
$PASS
EFO
ln /usr/sbin/i2cdetect /home/$USER/bin/i2cdetect && \
ln /usr/sbin/i2cdump /home/$USER/bin/i2cdump && \
ln /usr/sbin/i2cget /home/$USER/bin/i2cget && \
ln /usr/sbin/i2cset /home/$USER/bin/i2cset && \
# @ use > https://github.com/lurch/rpi-serial-console.git "instead"
git clone https://github.com/lurch/rpi-serial-console.git && \
ln ./rpi-serial-console/rpi-serial-console /usr/sbin/rpi-serial-console && \ # use $ sudo rpi-serial-console disable
cp -a /root/Server/ /home/$USER/Server/ && chown -R $USER:users /home/$USER/* && \
# adduser $USER gpio && \
adduser $USER i2c && \
adduser $USER sudo && \
adduser $USER dialout && \
#
# http://askubuntu.com/questions/192050/how-to-run-sudo-command-with-no-password
chmod +x /etc/init.d/* && \
sed -i "s/{USER}/$USER/g" /etc/sudoers.d/user-perm && \
/bin/su - $USER -c "cd ~/ && nvm install iojs && nvm alias default iojs && npm i forever node-gyp -g && cd ~/Server/ && npm install && cd ~" &&
##############
# git packages # TODO -> after created , $USER or ROOT ??
echo "Quick2Wire " && \
##:: git clone https://github.com/trojanspike/quick2wire-gpio-admin.git quck2wire && \
##:: cd quck2wire && make install && cd ~/ && \
# http://quick2wire.com/safe-controlled-access-to-gpio-on-the-raspberry-pi/
echo "Installing wiringPi" && \
# https://github.com/eugeneware/wiring-pi
# git clone https://github.com/eugeneware/wiring-pi.git WirePi && cd WirePi && ./install.sh && \
#
# git clone git://git.drogon.net/wiringPi && cd ./wiringPi && git pull origin && ./build && cd ~/ && \
# http://wiringpi.com/download-and-install/
#############
sed -i "s/{USER}/$USER/g" /etc/init.d/app-start.sh && \
update-rc.d tester.sh defaults && update-rc.d app-start.sh defaults && \
cat /etc/network/interfaces.static > /etc/network/interfaces && \
resolvconf -u && \
echo "Complete : Rebooting -> 5 seconds" && sleep 5 && reboot

# https://www.npmjs.com/package/forever
# http://wiringpi.com/download-and-install/
# iptables -t nat -A PREROUTING -p tcp --dport 1374 -j REDIRECT --to 80
# http://kvz.io/blog/2009/12/15/run-nodejs-as-a-service-on-ubuntu-karmic/
# iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3000
##

exit 1
