#!/usr/bin/env bash
VERSION=0.0.8
# Package
package=$( basename $0 );
################
# http://stackoverflow.com/questions/630372/determine-the-path-of-the-executing-bash-script
BASE="`dirname \"$0\"`"
BASE=$( cd "$BASE/../" && pwd )
if [ -z "$BASE" ] ; then
  exit 1
fi

QBIAN_DISK_DIR="$BASE/Provision/disks"
QBIAN_MINIBIAN_DIR="$BASE/Provision/minibian"
export "BASE=$BASE"
export "PROVISION=$BASE/Provision"
export "QBIAN_DISK_DIR=$QBIAN_DISK_DIR"
export "QBIAN_MINIBIAN_DIR=$QBIAN_MINIBIAN_DIR"
export "QBASE=$BASE/qemu_boot"
QBIAN_TOOL_DIR=$BASE/Provision/tools

source $BASE/qbian.conf

while test $# -gt 0; do
        case "$1" in
                -h|--help)
                echo "$package - tool-set for running minibian with qemu & provisioning images"
                echo " "
                echo "$package <application> [arguments]"
                echo " "
                echo "options:"
                echo -e "\e[0;36mqbian version\e[0m"
                echo "$package --version"
                echo -e "\e[0;36mrun an image with qemu\e[0m"
                echo "$package --run-img <NAME> <SSH_PORT>"
                echo -e "\e[0;36mrun an sd with qemu\e[0m"
                echo "$package --run-sd <DEVICE> <SSH> <CONFIG>"
                echo -e "\e[0;36mList available images\e[0m"
                echo "$package --list null, \"list available images\""
                echo -e "\e[0;36mCreate a new skel\e[0m"
                echo "$package --skel <NAME>"
                echo -e "\e[0;36mCreate a new minibian image\e[0m"
                echo "$package --create-img <NAME> <CONFIG> <RESIZE:{optional}>"
                echo -e "\e[0;36mRemove an images\e[0m"
                echo "$package --remove <NAME> <IMG_NAME> # remove an image"
                echo -e "\e[0;36mCreate Default image, this should be done first\e[0m"
                echo "$package --create-default null, \"Create the defalult image\""
                echo -e "\e[0;36mExport image to sd or image\e[0m"
                echo "$package --export <NAME> <PATH|DEVICE>"
                echo -e "\e[0;36mImport from sd or image\e[0m"
                echo "$package --import <NAME|DEVICE> <CONFIG>"
                echo -e "\e[0;36mRemove all images\e[0m"
                echo "$package --clear null, delete images"
                echo -e "\e[0;36mSSH into image\e[0m"
                echo "$package --ssh <SSH_OPTIONS>, ssh using the ssh key"
                exit 0
                ;;
				--version|-v)
					echo "V $VERSION";
					exit 0;
				;;
                --run-img)
                  if [ $# -eq 3 ]; then
                    NAME=$2
                    SSH_PORT=$3
                    CONFIG=$(cat $QBIAN_DISK_DIR/$NAME/config.qemu)
                    $QBASE/start.sh $QBIAN_DISK_DIR/$NAME/2015-02-18-wheezy-minibian.img $SSH_PORT "$CONFIG"
                  else
                    echo "Not enough params"
                    echo "$package --run-img <NAME> <SSH_PORT>"
                  fi
                  exit 0
                  ;;
                --run-sd)
                  if [ ! $# -eq 4 ]; then
                    echo "Error , not enough params"
                    echo "$ qbian --run-sd /dev/sdc 5522 \"config\""
                    exit 1
                  fi

                  DEVICE=$2
                  SSH=$3
                  CONFIG=$4
                  echo $#
                  clear && echo "Launching qemu with sd $DEVICE"
                  $QBASE/start.sh $DEVICE $SSH "$CONFIG"
                  exit 0
                  ;;
                --list)
                      echo "----------------------------------------|"
                  if [ ! -d $QBIAN_DISK_DIR/default/ ]; then
                    echo "ERR : Default image needs to be created"
                      echo "----------------------------------------|"
                    exit 2
                  fi
                  for i in $( ls -d $QBIAN_DISK_DIR/*/ );
                    do
                      echo $(basename $i)
                      echo $(cat $QBIAN_DISK_DIR/$(basename $i)/config.qemu)
                      echo "--------------------------------------|"
                    done
                  exit 0
                  ;;
                --skel)
                  if [ $# -eq 2 ]; then
                    NAME=$2
					if [ ! -d $BASE/injects/$NAME ];then
                    	rsync -avz $BASE/Provision/InjectSkeleton/* $BASE/injects/$NAME
					fi
                  else
                    echo "Not enough params $ qbian --skel <NAME>"
                  fi
                  exit 0
                ;;
                --create-img)
                  if [ "$#" -eq 4 ] || [ "$#" -eq 5 ]; then
                  NAME=$2 # name
                  CONFIG=$3 # config
                  RESIZE=$4 # resize
                  BASE_IMAGE=$5 # base img path
                  if [ ! -d $QBIAN_DISK_DIR/default ] && [ -z $DEFAULT_IMG ] ; then
                    echo "Default disk must be created before any others"
                    exit 1
                  fi
                  # TODO -> ensure INJECT folder has necessary folder structure , skel , ssh etc
                    if [ ! -z "$BASE_IMAGE" ]; then
                      export BASE_IMAGE="$QBIAN_DISK_DIR/$BASE_IMAGE/2015-02-18-wheezy-minibian.img"
                    fi
                    if [ ! -d "$QBIAN_DISK_DIR/$NAME" ]; then
                      mkdir -p $QBIAN_DISK_DIR/$NAME && \
                      if [ ! -d $BASE/injects/$NAME ]; then
                        rsync -avz $BASE/Provision/InjectSkeleton/* $BASE/injects/$NAME
						if [ "$DEFAULT_IMG" == "true" ];then
							cat $BASE/qbian.conf >> $BASE/injects/$NAME/root/.bashrc && \
							sed -i "s/{hostname}/$hostname/g" $BASE/injects/$NAME/etc/hostname && \
							sed -i "s/{hostname}/$hostname/g" $BASE/injects/$NAME/etc/hosts
						fi
                      fi
                      echo "$CONFIG" > $QBIAN_DISK_DIR/$NAME/config.qemu # && \
                      $QBIAN_MINIBIAN_DIR/minibian-qemu.sh $NAME "$BASE/injects/$NAME" "$RESIZE"
                    else
                      echo "Image \"$NAME\" is already available, use $ qbian --run $NAME <SSH>"
                      echo $QBIAN_DISK_DIR/$NAME
                    fi
                  else
                    echo "Not enough Params"
                    echo "$package --create-img <NAME> <CONFIG> <RESIZE:{optional}> <IMG:{optional}>"
                    echo "root/Provision.sh is also required"
                  fi
                  exit 0
                        ;;
                  --remove)
					# if $3 == true -> remove skel aswell
                    if [ $# -eq 2 ] || [ $# -eq 3 ] && [ -d "$QBIAN_DISK_DIR/$2" ]; then
                      rm -Rfv $QBIAN_DISK_DIR/$2
						if [ "$3" == "true" ];then
							rm -Rfv $BASE/injects/$2
						fi
                    else
                      echo "Error --remove , $2 not found"
                    fi
                    exit 0
                    ;;
                    --ssh)
                      # $ qbian --ssh "user@127.0.0.1 -p 5522"
                      # $ qbian --ssh "user@192.168.1.100"
                      if [ ! $# -eq 2 ]; then
                        echo "Not correct param amount"
                        echo "qbian --ssh \"user@127.0.0.1 -p 5522\""
                        echo "qbian --ssh \"user@192.168.1.100\""
                        exit 2
                      fi
                      SSH_ARGS=$2
                      ssh -i $PROVISION/ssh/id_rsa $SSH_ARGS
                      exit 0
                    ;;
                  --create-default)
                  if [ ! -d "$QBIAN_DISK_DIR/default" ]; then
                      $QBIAN_TOOL_DIR/create-default
                    else
                      echo "image \"default\" already available, use $ $package --run-img default 5522"
                    fi
                    exit 0
                    ;;
                  --create-sd)
                    if test $# -eq 3; then
						$QBIAN_TOOL_DIR/create-sd $2 $3
                    else
                      echo "Not enough Params"
					  echo "$package --create-sd <dev-img> <skel>"
                    fi
                    exit 0
                  ;;
                --export)
                NAME=$2
                PATH=$3
                  if [ ! $# -eq 3 ]; then
                    echo "Not enough params"
                    echo "$package --export <NAME> <DEVICE|PATH>"
                    echo "$package --export default /dev/sdc"
                    echo "$package --export default ~/Path/tp/create/image.img"
                    exit 1
                  fi
                  if [ -f $QBIAN_DISK_DIR/$NAME/2015-02-18-wheezy-minibian.img ]; then
                    echo "Exporting $NAME to $PATH"
                    /usr/bin/sudo /usr/bin/dd if=$QBIAN_DISK_DIR/$NAME/2015-02-18-wheezy-minibian.img of=$PATH bs=4M
                  else
                    echo "ERROR : No minibian image found"
                  fi
                  exit 0
                  ;;
                  --import)
                  PATH=$2
                  NAME=$3
                  CONFIG=$4
                    if [ ! $# -eq 4 ]; then
                      echo "Not enough params"
                      echo "$package --import <DEVICE|PATH> <NAME> <CONFIG>"
                      echo "$package --import /dev/sdc imported \"-redir tcp:1374::1374\""
                      echo "$package --import ~/Path/tp/create/image.img imported \"-redir tcp:1374::1374\""
                      exit 1
                    fi
                    if [ ! -d $QBIAN_DISK_DIR/$NAME ]; then
                      /usr/bin/mkdir $QBIAN_DISK_DIR/$NAME && \
                      echo "$CONFIG" > $QBIAN_DISK_DIR/$NAME/config.qemu && \
                      echo "Importing $NAME to $PATH" && \
                      /usr/bin/sudo /usr/bin/dd if=$PATH of=$QBIAN_DISK_DIR/$NAME/2015-02-18-wheezy-minibian.img bs=4M && \
                      echo "Import complete - please chown the imported image"
                    else
                      echo "ERROR : image alread abailable"
                    fi
                    exit 0
                    ;;
                --clear)
                  rand=$RANDOM
                  mv $QBIAN_DISK_DIR/DISK-HERE.txt $BASE/$rand && \
                  rm -Rf $QBIAN_DISK_DIR/* && \
                  mv $BASE/$rand $QBIAN_DISK_DIR/DISK-HERE.txt
                  exit 0
                  ;;
                *)
                  $BASE/bin/qbian --help && exit 0
                  exit 0
                ;;
        esac
done
